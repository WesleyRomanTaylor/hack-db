syntax = "proto3";

package service;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

import "github.com/infobloxopen/atlas-app-toolkit/query/collection_operators.proto";
import "github.com/infobloxopen/protoc-gen-gorm/options/gorm.proto";
import "github.com/infobloxopen/protoc-gen-gorm/types/types.proto";

option go_package = "github.com/brocwoodworthIBLX/hack-db/pkg/pb;pb";

message Submission {
  option (gorm.opts).ormable = true;
  gorm.types.UUIDValue id = 1;
  string title = 2;
  string submission = 3;
  string submitted_by = 4;
  string tags = 5;
  int32 votes = 6;
}

message CreateSubmissionRequest {
  Submission payload = 1;
}

message CreateSubmissionResponse {
  Submission result = 1;
}

message ListSubmissionRequest {
  infoblox.api.Filtering filter = 1;
  infoblox.api.Sorting order_by = 2;
  infoblox.api.FieldSelection fields = 3;
  infoblox.api.Pagination paging = 4;
}

message ListSubmissionResponse {
  repeated Submission results = 1;
}

message ReadSubmissionRequest {
  gorm.types.UUIDValue id = 1;
}

message ReadSubmissionResponse {
  Submission result = 1;
}

message UpdateSubmissionRequest {
  Submission payload = 1;
}

message UpdateSubmissionResponse {
  Submission result = 1;
}

service Submissions {
  option (gorm.server) = {
    autogen: true,
    txn_middleware: true,
  };

  rpc Create (CreateSubmissionRequest) returns (CreateSubmissionResponse) {
    option (google.api.http) = {
      post: "/submit"
      body: "payload"
    };
  }

  rpc Update (UpdateSubmissionRequest) returns (UpdateSubmissionResponse) {
    option (google.api.http) = {
      patch: "/submit/{payload.id.value}"
      body: "payload"
    };
  }

  rpc Read(ReadSubmissionRequest) returns (ReadSubmissionResponse) {
    option (google.api.http) = {
      get: "/submissions/{id.value}"
    };
  }

  rpc List(ListSubmissionRequest) returns (ListSubmissionResponse) {
    option (google.api.http) = {
      get: "/submissions"
    };
  }
}
